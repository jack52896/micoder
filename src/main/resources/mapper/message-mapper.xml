<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zouyujie.micoder.mapper.MessageMapper">
    <sql id="selectFields">
        id,from_uid,to_uid,conversation_id,content,status,createTime
    </sql>
    <sql id="insertFields">
        from_uid,to_uid,conversation_id,content,status,createTime
    </sql>
    <resultMap id="MessageBean" type="com.zouyujie.micoder.entity.Message">
        <id column="mid" property="id"></id>
        <result column="conversation_id" property="conversationId"></result>
        <result column="content" property="content"></result>
        <result column="mstatus" property="status"></result>
        <result column="mcreateTime" property="createTime"></result>
        <association property="fromUser" javaType="com.zouyujie.micoder.entity.User">
            <id column="fuid" property="id"></id>
            <result column="funame" property="name"></result>
            <result column="fuheaderUrl" property="headerUrl"></result>
            <result column="fustatus" property="status"></result>
        </association>
        <association property="toUser" javaType="com.zouyujie.micoder.entity.User">
            <id column="tuid" property="id"></id>
            <result column="tuname" property="name"></result>
            <result column="tuheaderUrl" property="headerUrl"></result>
            <result column="tustatus" property="status"></result>
        </association>
    </resultMap>
    <select id = "selectMessageByConversation" resultMap="MessageBean">
        SELECT
                m.id 'mid',
                m.`status` 'mstatus',
                m.content 'content',
                m.createTime 'mcreateTime',
                m.conversation_id 'conversation_id',
                fu.id 'fuid',
                fu.name 'funame',
                fu.headerUrl 'fuheaderUrl',
                fu.`status` 'fustatus',
                tu.id 'tuid',
                tu.`name` 'tuname',
                tu.headerUrl 'tuheaderUrl',
                tu.`status` 'tustatus'
        FROM
                `user` fu
                RIGHT JOIN message m ON fu.id = m.from_uid
                LEFT JOIN `user` tu ON m.to_uid = tu.id
        WHERE
            m.conversation_id = #{conversationId}
        order by m.id desc
        limit #{offset},#{limit}

    </select>
    <select id="selectByConversation" resultMap="MessageBean">
        select
                m.id 'mid',
                m.`status` 'mstatus',
                m.content 'content',
                m.createTime 'mcreateTime',
                m.conversation_id 'conversation_id',
                fu.id 'fuid',
                fu.name 'funame',
                fu.headerUrl 'fuheaderUrl',
                fu.`status` 'fustatus',
                tu.id 'tuid',
                tu.`name` 'tuname',
                tu.headerUrl 'tuheaderUrl',
                tu.`status` 'tustatus'
        from
                `user` fu
                RIGHT JOIN message m ON fu.id = m.from_uid
                LEFT JOIN `user` tu ON m.to_uid = tu.id
        where m.id in (
            select max(id) from message
            where m.status != 2
            and from_uid != 1
            and (from_uid=#{user.id} or to_uid =#{user.id})
            group by conversation_id
        )
        order by m.id desc
        limit #{offset},#{limit}
    </select>
    <select id="selectCountByConversations" resultType="int">
        select count(id)
        from message
        where id in (
            select max(id) from message
            where status != 2
            and from_uid != 1
            and (from_uid=#{user.id} or to_uid =#{user.id})
            group by conversation_id
        )
    </select>
    <select id="selectLetterCount" resultType="int">
        select count(id) from message
        where
            status != 2
            and from_uid != 1
            and conversation_id = #{conversationId}
    </select>
    <select id="selectLetterUnreadCount" resultType="int">
        select count(id) from message
            where
            status = 0
            and from_uid != 1
            and conversation_id = #{conversationId}
    </select>
    <select id="selectUnRead" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_uid != 1
        and to_uid = #{userId}
    </select>
    <update id="updateMessageStatus">
        update message set status = #{status}
        where conversation_id = #{cid}
    </update>
    <insert id = "insertMessage">
        insert into message(<include refid="insertFields"></include>)
        values(#{message.fromUser.id},#{message.toUser.id},#{message.conversationId},#{message.content},#{message.status},#{message.createTime})
    </insert>
    <select id = "selectNotice" resultType="com.zouyujie.micoder.entity.Message" resultMap="MessageBean">
        select
            m.id 'mid',
                m.`status` 'mstatus',
                m.content 'content',
                m.createTime 'mcreateTime',
                m.conversation_id 'conversation_id',
                fu.id 'fuid',
                fu.name 'funame',
                fu.headerUrl 'fuheaderUrl',
                fu.`status` 'fustatus',
                tu.id 'tuid',
                tu.`name` 'tuname',
                tu.headerUrl 'tuheaderUrl',
                tu.`status` 'tustatus'
        from
            `user` fu
                RIGHT JOIN message m ON fu.id = m.from_uid
                LEFT JOIN `user` tu ON m.to_uid = tu.id
        where m.id in(
            select max(id) from message
            where from_uid = 1
            and status != 2
            and to_uid = #{userId}
            and conversation_id = #{topic}
        )
    </select>
    <select id = "selectAllNotice" resultType="com.zouyujie.micoder.entity.Message" resultMap="MessageBean">
        select
            m.id 'mid',
                m.`status` 'mstatus',
                m.content 'content',
                m.createTime 'mcreateTime',
                m.conversation_id 'conversation_id',
                fu.id 'fuid',
                fu.name 'funame',
                fu.headerUrl 'fuheaderUrl',
                fu.`status` 'fustatus',
                tu.id 'tuid',
                tu.`name` 'tuname',
                tu.headerUrl 'tuheaderUrl',
                tu.`status` 'tustatus'
        from
            `user` fu
                RIGHT JOIN message m ON fu.id = m.from_uid
                LEFT JOIN `user` tu ON m.to_uid = tu.id
        where
            m.status != 2
            and fu.id =1
            and tu.id = #{userId}
            and m.conversation_id = #{topic}
    </select>
    <select id = "selectNoticeCount" resultType="Integer">
        select count(id) from message
        where status != 2
        and from_uid = 1
        and to_uid = #{userId}
        <if test="topic != null">
            and conversation_id = #{topic}
        </if>
    </select>
    <select id = "selectUnReadNoticeCount" resultType="Integer">
        select count(id) from message
        where status = 0
        and from_uid = 1
        and to_uid = #{userId}
        <if test = "topic != null">
            and conversation_id = #{topic}
        </if>
    </select>
    <update id="updateNoticeMessage">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>